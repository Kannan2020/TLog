@model ICollection<TLog.Models.ServiceLineFunction>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var grid = new WebGrid(Model);
}

<style type="text/css">
    .edit-mode {
    }

    .edit-user {
    }

        .edit-user display-mode {
        }

    .save-user edit-mode {
    }

    .display-mode {
    }

    .cancel-user {
    }

    .webgrid-table {
        font-family: Arial,Helvetica,sans-serif;
        font-size: 14px;
        font-weight: normal;
        width: 650px;
        display: table;
        border-collapse: collapse;
        border: solid px #C5C5C5;
        background-color: white;
    }

        .webgrid-table td, th {
            border: 1px solid #C5C5C5;
            padding: 3px 7px 2px;
        }

    .webgrid-header, .webgrid-header a {
        background-color: #E3E3E3;
        color: black;
        text-align: left;
        text-decoration: none;
    }

    .webgrid-footer {
    }

    .webgrid-row-style {
        padding: 3px 7px 2px;
    }

    .webgrid-alternating-row {
        background-color: #F5F5F5;
        padding: 3px 7px 2px;
    }

    .col1Width {
        width: 50px;
    }

    .col2Width {
        width: 200px;
    }
    .edit-mode
    {
        display:none;
    }
</style>
<div class="container-fluid body-content" style="margin-top: 13%;">
    <div class="row">
        <div class="col-md-7">
            <button class="edit-user display-mode btn btn-default pull-right btnShowModal" id="btnShowModal" onclick="showModel('0')">Add New ServiceLine</button>
        </div>
    </div>
    <div class="row">
        <div class="col-md-7">
            <div id="gridContent" style=" padding:20px; ">
                @grid.GetHtml(
        tableStyle: "webgrid-table",
        headerStyle: "webgrid-header",
        footerStyle: "webgrid-footer",
        alternatingRowStyle: "webgrid-alternating-row",
        selectedRowStyle: "webgrid-selected-row",
        rowStyle: "webgrid-row-style",
        mode: WebGridPagerModes.All,
        columns:
            grid.Columns(
             grid.Column("ID", format: @<text>@item.Id</text>, style: "col1Width" ),
             grid.Column("Name", "Name", format: @<text><label id="lblName">@item.Name</label></text>, style: "col2Width"),
             grid.Column("Active", "Active", format: @<text><input type="checkbox" id="isActive" checked="@item.Active" disabled /></text>, style: "col2Width"),
             grid.Column("Action", format: @<text>
                    <button class="display-mode btn btn-default" onclick="showModel('@item.Id')">Edit</button>
            </text>, style: "col3Width", canSort: false)
          ))
            </div>
        </div>
    </div>

</div>
<div class="modal fade" tabindex="-1" id="loginModal"
     data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" id="btnHideModal">
                    ×
                </button>
                <h4 class="modal-title">Add/Update Service Line</h4>
            </div>
            <div class="modal-body" id="popupContent">
            </div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-primary button button4">Sign</button>
            </div>
        </div>
    </div>
</div>
@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $("#btnHideModal").click(function () {
                window.location.reload();
            });
        });
        function addRow(divid) {
            alert(divid);
            var grd = document.getElementById(divid);

            var tbod = grd.rows[0].parentNode;
            var newRow = grd.rows[grd.rows.length - 1].cloneNode(true);
            tbod.appendChild(newRow);
            return false;

            cell.appendChild(element);

        }
        function showModel(data) {
            var url = '@Url.Action("ServiceLine", "Masters")';
            url += '/?Id=' + data;
            $("#popupContent").load(url);
            $("#loginModal").modal('show');
            $('.pedit-mode').hide();
        }
        function editAct(ctrl)
        {
            var tr = $("#" + ctrl).parents('tr:first');
            tr.find('.edit-mode, .display-mode').toggle();
        }
        
        $(function () {
            $('.edit-mode').hide();
            $('.edit-user, .cancel-user').on('click', function () {
                var tr = $(this).parents('tr:first');
                tr.find('.edit-mode, .display-mode').toggle();
            });
            $('.save-user').on('click', function () {
                var tr = $(this).parents('tr:first');
                var Name = tr.find("#Name").val();
                var SurName = tr.find("#SurName").val();
                var UserID = tr.find("#UserID").html();
                tr.find("#lblName").text(Name);
                tr.find("#lblSurName").text(SurName);
                tr.find('.edit-mode, .display-mode').toggle();
                var UserModel =
                {
                    "ID": UserID,
                    "Name": Name,
                    "SurName": SurName
                };
                $.ajax({
                    url: '/User/ChangeUser/',
                    data: JSON.stringify(UserModel),
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        alert(data);
                    }
                });

            });
        })
    </script>
}


