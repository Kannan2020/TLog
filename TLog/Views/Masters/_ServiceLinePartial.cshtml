@model TLog.Models.ServiceLineFunction
@{
    var grid = new WebGrid(Model.Activities);  
}
@*@using (Ajax.BeginForm("Create", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "loginModal" }))
{*@
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Active, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Active)
                @Html.ValidationMessageFor(model => model.Active)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                <button class="btn btn-success pull-right" onclick="addRow('acgridContent')">+</button> 
            </div>
        </div>
        @if(Model.Activities.Count>0)
        {
            <div id="acgridContent" style=" padding:20px;">
            @grid.GetHtml(
        tableStyle: "webgrid-table",
        headerStyle: "webgrid-header",
        footerStyle: "webgrid-footer",
        alternatingRowStyle: "webgrid-alternating-row",
        selectedRowStyle: "webgrid-selected-row",
        rowStyle: "webgrid-row-style",
        mode: WebGridPagerModes.All,
        columns:
            grid.Columns(
             grid.Column("ID", format: @<text>  <span class="display-mode">@item.Id </span> <label id="UserID" class="edit-mode">@item.Id</label> </text>, style: "col1Width" ),
             grid.Column("Name", "Name", format: @<text>  <span class="display-mode"> <label id="lblName">@item.Name</label> </span> <input type="text" id="Name" value="@item.Name" class="edit-mode" /></text>, style: "col2Width"),
             grid.Column("Active", "Active", format: @<text> <span class="display-mode"><input type="checkbox" id="isActive" checked="@item.Active" disabled /></span>  <input type="checkbox" id="Active" checked="@item.Active" class="edit-mode" /> </text>, style: "col2Width"),
             grid.Column("Action", format: @<text>
                <button class="edit-user display-mode btn btn-default" id=@item.Id onclick="editAct('@item.Id');">Edit</button>
                <button class="save-user edit-mode btn btn-default">Save</button>
                <button class="cancel-user edit-mode btn btn-default">Cancel</button>
            </text>, style: "col3Width", canSort: false)
          ))
        </div> 
        }
       

        @*<div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>*@
    </div>
@*}*@
